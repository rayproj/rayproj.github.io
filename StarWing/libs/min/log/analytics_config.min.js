var GA_GAME_LOG_ID = "UA-146643027-13";
//   gaLogEvent.logByDate("到达层级",1)
window.gaLogEvent = {
    log:function(type, action){
        var gameName = "HAGO_TAPPETS";
        ga('send', {
            hitType: 'event',
            eventCategory: gameName+"",
            eventAction: type+"",
            eventLabel: action+""
        });
    }
}

Date.prototype.Format = function(fmt)
{ //author: meizz
    var o = {
        "M+" : this.getMonth()+1,                 //月份
        "d+" : this.getDate(),                    //日
        "h+" : this.getHours(),                   //小时
        "m+" : this.getMinutes(),                 //分
        "s+" : this.getSeconds(),                 //秒
        "q+" : Math.floor((this.getMonth()+3)/3), //季度
        "S"  : this.getMilliseconds()             //毫秒
    };
    if(/(y+)/.test(fmt))
        fmt=fmt.replace(RegExp.$1, (this.getFullYear()+"").substr(4 - RegExp.$1.length));
    for(var k in o)
        if(new RegExp("("+ k +")").test(fmt))
            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : (("00"+ o[k]).substr((""+ o[k]).length)));
    return fmt;
}

// From https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript
function generateUUID() { // Public Domain/MIT
    var d = Date.now() + performance.now();
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        var r = (d + Math.random() * 16) % 16 | 0;
        d = Math.floor(d / 16);
        return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);
    });
}

function initGoogleAnalytics() {
    console.log('initGoogleAnalytics begin ...');
    var GA_LOCAL_STORAGE_KEY = 'ga:clientId';

    var clientId = window.localStorage.getItem(GA_LOCAL_STORAGE_KEY);

    if (!clientId) {
        clientId = generateUUID();
        window.localStorage.setItem(GA_LOCAL_STORAGE_KEY, clientId);
    }

    ga('create', // command
		GA_GAME_LOG_ID, // trackingId, please replace yours
        {
            'storage': 'none',
            'clientId': clientId
        }
    );

    ga('set', 'transport', 'xhr');
    ga('set', 'appName', 'myAppName');

    ga(function(tracker) {
        console.log('cjh clientId: ' + tracker.get('clientId'));
        // localStorage.setItem(GA_LOCAL_STORAGE_KEY, tracker.get('clientId'));
    });

    ga('send', 'pageview');

    /*ga('send', {
        hitType: 'event',
        eventCategory: 'Category',
        eventAction: 'Action',
        eventLabel: 'Label'
    });

    ga('send', {
        hitType: 'event',
        eventCategory: 'Category222',
        eventAction: 'Action222',
        eventLabel: 'Label222'
    });

    ga('send', {
        hitType: 'event',
        eventCategory: 'Category333',
        eventAction: 'Action333',
        eventLabel: 'Label333'
    });

    ga('send', {
        hitType: 'event',
        eventCategory: 'Videos',
        eventAction: 'play',
        eventLabel: 'Fall Campaign 222 '
    });

    ga('send', {
        hitType: 'social',
        socialNetwork: 'Facebook',
        socialAction: 'like',
        socialTarget: 'http://myownpersonaldomain.com'
    });

    // The `appName` field is now set, so
    // screenview hits don't need to include it.
    ga('send', 'screenview', {screenName: 'Home'});

    ga('send', {
        hitType: 'timing',
        timingCategory: 'JS Dependencies',
        timingVar: 'load',
        timingValue: 3549
    });

    ga('send', 'exception', {
        'exDescription': 'I am exception test...',
        'exFatal': false
    });*/

    console.log('testGoogleAnalytics end ...');
}

initGoogleAnalytics();